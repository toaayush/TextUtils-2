{"version":3,"sources":["components/Alert.js","components/About.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","About","myStyle","color","mode","backgroundColor","style","id","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","react_router_dom","to","title","aria-label","aria-current","aboutText","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","length","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"wOAEe,SAASA,EAAMC,GAK5B,OACEA,EAAMC,OAASC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,eAAAC,OAAiBN,EAAMC,MAAMM,KAA7B,gCAAiEC,KAAK,SAC/FN,EAAAC,EAAAC,cAAA,cANe,SAACK,GAChB,IAAMC,EAAQD,EAAKE,cACnB,OAAOD,EAAME,OAAO,GAAGC,cAAgBH,EAAMI,MAAM,GAI1CC,CAAWf,EAAMC,MAAMM,MAAhC,MAAkDP,EAAMC,MAAMe,KCPvD,SAASC,EAAMjB,GAO1B,IAAIkB,EAAU,CACVC,MAAuB,SAAfnB,EAAMoB,KAAgB,QAAQ,QACtCC,gBAAiC,SAAfrB,EAAMoB,KAAgB,UAAU,SAGtD,OACElB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYiB,MAAOJ,GAChChB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,YACIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYkB,GAAG,oBAClCrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBiB,MAAOJ,GACnChB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBkB,GAAG,cACpCrB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAmBE,KAAK,SAASiB,iBAAe,WAAWF,MAAOJ,EAASO,iBAAe,eAAeC,gBAAc,OAAOC,gBAAc,eAC1JzB,EAAAC,EAAAC,cAAA,qCAGJF,EAAAC,EAAAC,cAAA,OAAKmB,GAAG,cAAclB,UAAU,mCAAmCuB,kBAAgB,aAAaC,iBAAe,qBAC/G3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,0HAKJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBiB,MAAOJ,GACnChB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBkB,GAAG,cACpCrB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BAA6BE,KAAK,SAASiB,iBAAe,WAAWF,MAAOJ,EAASO,iBAAe,eAAeC,gBAAc,QAAQC,gBAAc,eACzKzB,EAAAC,EAAAC,cAAA,+BAGAF,EAAAC,EAAAC,cAAA,OAAKmB,GAAG,cAAclB,UAAU,8BAA8BuB,kBAAgB,aAAaC,iBAAe,qBAC1G3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,sPAKJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBiB,MAAOJ,GACnChB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBkB,GAAG,gBACpCrB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,6BAA6BE,KAAK,SAASiB,iBAAe,WAAWF,MAAOJ,EAASO,iBAAe,iBAAiBC,gBAAc,QAAQC,gBAAc,iBAC3KzB,EAAAC,EAAAC,cAAA,sCAGAF,EAAAC,EAAAC,cAAA,OAAKmB,GAAG,gBAAgBlB,UAAU,8BAA8BuB,kBAAgB,eAAeC,iBAAe,qBAC9G3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,mOC5CG,SAASyB,EAAO9B,GAC7B,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kCAAAC,OAAoCN,EAAMoB,KAA1C,QAAAd,OAAqDN,EAAMoB,OACrElB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAM1B,UAAU,eAAe2B,GAAG,KAAKhC,EAAMiC,OAC7C/B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBE,KAAK,SAASiB,iBAAe,WAAWC,iBAAe,0BAA0BE,gBAAc,yBAAyBD,gBAAc,QAAQQ,aAAW,qBACxLhC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAEpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BkB,GAAG,0BACzCrB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAM1B,UAAU,kBAAkB8B,eAAa,OAAOH,GAAG,KAAzD,SAEJ9B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAM1B,UAAU,WAAW2B,GAAG,UAAUhC,EAAMoC,aAOlDlC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,+BAAAC,OAA8C,UAAbN,EAAMoB,KAAe,OAAO,UAE3ElB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBgC,QAASrC,EAAMsC,WAAY/B,KAAK,WAAWgB,GAAG,2BAClFrB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBkC,QAAQ,0BAA5C,wBC1BG,SAASC,EAASxC,GAC7B,IADoCyC,EAoCZC,mBAAS,IApCGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAoC7BK,EApC6BH,EAAA,GAoCvBI,EApCuBJ,EAAA,GAuCtC,OACEzC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6C,SAAA,KACI9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYiB,MAAO,CAACH,MAAoB,UAAbnB,EAAMoB,KAAe,QAAQ,UACnElB,EAAAC,EAAAC,cAAA,UAAKJ,EAAMiD,SACX/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAe6C,MAAOJ,EAAMK,SAzBrC,SAACC,GACpBL,EAAQK,EAAMC,OAAOH,QAwB6D5B,MAAO,CAACD,gBAA8B,SAAbrB,EAAMoB,KAAc,UAAU,QAASD,MAAoB,UAAbnB,EAAMoB,KAAe,QAAQ,SAAUG,GAAG,QAAQ+B,KAAK,OAExMpD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BgC,QA9CpC,WAGlB,IAAIkB,EAAUT,EAAKjC,cACnBkC,EAAQQ,GACRvD,EAAMwD,UAAU,0BAA2B,aAyCnC,wBACAtD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BgC,QAxCpC,WAClB,IAAIkB,EAAUT,EAAKnC,cACnBoC,EAAQQ,GACRvD,EAAMwD,UAAU,0BAA2B,aAqCnC,wBACAtD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BgC,QAnCjC,WAErBU,EADc,IAEd/C,EAAMwD,UAAU,gBAAiB,aAgCzB,cACAtD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BgC,QA1BvC,WACf,IAAIS,EAAOW,SAASC,eAAe,SACnCZ,EAAKa,SACLC,UAAUC,UAAUC,UAAUhB,EAAKI,OACnClD,EAAMwD,UAAU,uBAAwB,aAsBhC,aACAtD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,4BAA4BgC,QArBhC,WACtB,IAAIkB,EAAUT,EAAKiB,MAAM,QACzBhB,EAAQQ,EAAQS,KAAK,MACrBhE,EAAMwD,UAAU,wBAAyB,aAkBjC,wBAEJtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBiB,MAAO,CAACH,MAAoB,UAAbnB,EAAMoB,KAAe,QAAQ,UACxElB,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SAAI0C,EAAKiB,MAAM,KAAKE,OAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQC,SAAaA,OAAnE,cAAsFrB,EAAKqB,OAA3F,eACAjE,EAAAC,EAAAC,cAAA,SAAI,KAAM0C,EAAKiB,MAAM,KAAKI,OAA1B,oBACAjE,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAI0C,EAAKqB,OAAO,EAAErB,EAAK,8DDnBvChB,EAAOsC,aAAe,CAClBnC,MAAO,iBACPG,UAAW,oBE2BAiC,MA1Df,WAAe,IAAA5B,EACWC,mBAAS,SADpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNrB,EADMuB,EAAA,GACA2B,EADA3B,EAAA,GAAA4B,EAEa7B,mBAAS,MAFtB8B,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAENtE,EAFMuE,EAAA,GAECC,EAFDD,EAAA,GAGPhB,EAAY,SAACkB,EAASnE,GAC1BkE,EAAS,CACPzD,IAAK0D,EACLnE,KAAMA,IAERoE,WAAW,WACTF,EAAS,OACR,OAwBL,OACEvE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6C,SAAA,KAGE9C,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,KACA7B,EAAAC,EAAAC,cAAC0B,EAAD,CAAQG,MAAQ,YAAYb,KAAQA,EAAMkB,WA1B3B,WACL,UAATlB,GACDkD,EAAQ,QACRb,SAASmB,KAAKtD,MAAMD,gBAAkB,UACtCmC,EAAU,6BAA8B,WACxCC,SAASxB,MAAQ,0BASjBqC,EAAQ,SACRb,SAASmB,KAAKtD,MAAMD,gBAAkB,QACtCmC,EAAU,8BAA+B,WACzCC,SAASxB,MAAQ,6BAUjB/B,EAAAC,EAAAC,cAACL,EAAD,CAAOE,MAAOA,IACdC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACyE,EAAA,EAAD,KAGE3E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAChB7E,EAAAC,EAAAC,cAACa,EAAD,CAAOG,KAAQA,KAEjBlB,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,KAChB7E,EAAAC,EAAAC,cAACoC,EAAD,CAAUgB,UAAWA,EAAWP,QAAU,kCAAkC7B,KAAQA,UClDjF4D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWrC,SAASC,eAAe,SACpDqC,OACH7F,EAAAC,EAAAC,cAACF,EAAAC,EAAM6F,WAAP,KACE9F,EAAAC,EAAAC,cAAC6F,EAAD,QAOJjB","file":"static/js/main.deaabe61.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}: </strong>{props.alert.msg}\r\n        {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function About(props) {\r\n    // const [myStyle, setMyStyle] = useState(\r\n    //     {\r\n    //         color: 'black',\r\n    //         backgroundColor: 'white'\r\n    //     }\r\n    // );\r\n    let myStyle = {\r\n        color : props.mode === 'dark'?'white':'black',\r\n        backgroundColor : props.mode === 'dark'?'#042743':'white'\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\" style={myStyle}>\r\n        <h1 className='my-3 mx-3'>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" style={myStyle} data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                <strong>Analyze Your Text</strong>\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n                TextUtils gives you a way to analyze your text quickly and efficiently. Be it word count, character count or preview\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" style={myStyle} data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n            <strong>Free to Use</strong>\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n                TextUtils is a free character counter tool thet provides instant character count & word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/character limit.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" style={myStyle} data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n            <strong>Browser Compatible</strong>\r\n            </button>\r\n            </h2>\r\n            <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n                This word counter software works in any web browser such as Chrome, Firefox, Internet explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li>\r\n            </ul>\r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            {/* <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/> */}\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Set title here\",\r\n    aboutText: \"About\"\r\n}\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked: \" + text);\r\n        // setText(\"You have clicked on handleUpClick\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n\r\n    }\r\n    const handleClearClick = ()=>{\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n        // console.log(\"On change\");\r\n    }\r\n    const handleCopy = ()=>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select(); //Optional\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n    }\r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\", \"success\");\r\n    }\r\n    \r\n    const [text, setText] = useState('');\r\n    // text = \"new text\"; // Wrong way to change the state\r\n    // setText(\"new text\"); // Right way to change the state\r\n  return (\r\n    <div>\r\n        <>\r\n            <div className=\"container\" style={{color: props.mode==='light'?'black':'white'}}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#042743':'white', color: props.mode==='light'?'black':'white'}} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color: props.mode==='light'?'black':'white'}}>\r\n                <h2>Your text summary</h2>\r\n                <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n                <p>{0.008*text.split(\" \").length} Minutes to read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n            </div>\r\n        </>\r\n    </div>\r\n  )\r\n}\r\n","\nimport React, { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n      // setInterval(() => {\n      //   document.title = 'TextUtils is Amazing';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now';\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n\n  return (\n    <>\n      {/* <Navbar title = \"TextUtils\" aboutText = \"About TextUtils\"/> */}\n      {/* <Navbar/> */}\n      <Router>\n      <Navbar title = \"TextUtils\" mode = {mode} toggleMode = {toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n        <Switch>\n          {/* /users --> Component 1\n          /users/home --> Component 2 - This can render if we don't use exact for /users only*/}\n          <Route exact path=\"/about\">\n            <About mode = {mode}/>\n          </Route>\n          <Route exact path=\"/\">\n            <TextForm showAlert={showAlert} heading = \"Enter the text to analyze below\" mode = {mode}/>\n          </Route>\n        </Switch>\n      </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}